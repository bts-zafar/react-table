{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\data-table\\\\src\\\\components\\\\SortingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS, GROUPED_CoLUMNS } from './columns';\nimport './table.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SortingTable = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    footerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSorttedDesc ? '⬇️' : '⬆️' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map(row => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 26\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tfoot\", {\n        children: footerGroups.map(footerGroups => /*#__PURE__*/_jsxDEV(\"tr\", { ...footerGroups.getFooterGroupProps(),\n          children: footerGroups.headers.map(column => /*#__PURE__*/_jsxDEV(\"td\", { ...column.getFooterGroupProps,\n            children: column.render('Footer')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(SortingTable, \"o8r7Cg1lq1CD+aNuF6kY/fly61c=\", false, function () {\n  return [useTable];\n});\n\n_c = SortingTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortingTable\");","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/data-table/src/components/SortingTable.js"],"names":["React","useMemo","useTable","useSortBy","MOCK_DATA","COLUMNS","GROUPED_CoLUMNS","SortingTable","columns","data","getTableProps","getTableBodyProps","headerGroups","footerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSorttedDesc","row","getRowProps","cells","cell","getCellProps","getFooterGroupProps"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,aAApC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,OAAT,EAAkBC,eAAlB,QAAyC,WAAzC;AACA,OAAO,aAAP;;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAMC,OAAO,GAAGP,OAAO,CAAC,MAAMI,OAAP,EAAgB,EAAhB,CAAvB;AACA,QAAMI,IAAI,GAAGR,OAAO,CAAC,MAAMG,SAAP,EAAkB,EAAlB,CAApB;AAEA,QAAM;AACJM,IAAAA,aADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,YAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,IALI;AAMJC,IAAAA;AANI,MAOFb,QAAQ,CAAC;AACXM,IAAAA,OADW;AAEXC,IAAAA;AAFW,GAAD,EAIZN,SAJY,CAPZ;AAcA,sBACE;AAAA,2BACE,sBAAWO,aAAa,EAAxB;AAAA,8BACE;AAAA,kBACGE,YAAY,CAACI,GAAb,CAAiBC,WAAW,iBAC3B,mBAAQA,WAAW,CAACC,mBAAZ,EAAR;AAAA,oBACGD,WAAW,CAACE,OAAZ,CAAoBH,GAApB,CAAwBI,MAAM,iBAC7B,mBAAQA,MAAM,CAACC,cAAP,CAAsBD,MAAM,CAACE,oBAAP,EAAtB,CAAR;AAAA,uBAA+DF,MAAM,CAACG,MAAP,CAAc,QAAd,CAA/D,eAEA;AAAA,wBACKH,MAAM,CAACI,QAAP,GAAmBJ,MAAM,CAACK,aAAP,GAAuB,IAAvB,GAA8B,IAAjD,GAAyD;AAD9D;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,sBAAWd,iBAAiB,EAA5B;AAAA,kBACGG,IAAI,CAACE,GAAL,CAASU,GAAG,IAAI;AACfX,UAAAA,UAAU,CAACW,GAAD,CAAV;AACA,8BACE,mBAAQA,GAAG,CAACC,WAAJ,EAAR;AAAA,sBACGD,GAAG,CAACE,KAAJ,CAAUZ,GAAV,CAAca,IAAI,IAAI;AACrB,kCAAO,mBAAQA,IAAI,CAACC,YAAL,EAAR;AAAA,0BAA8BD,IAAI,CAACN,MAAL,CAAY,MAAZ;AAA9B;AAAA;AAAA;AAAA;AAAA,sBAAP;AACD,aAFA;AADH;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD,SATA;AADH;AAAA;AAAA;AAAA;AAAA,cAhBF,eA4BE;AAAA,kBAEQV,YAAY,CAACG,GAAb,CAAiBH,YAAY,iBACzB,mBAAOA,YAAY,CAACkB,mBAAb,EAAP;AAAA,oBACKlB,YAAY,CAACM,OAAb,CAAqBH,GAArB,CAAyBI,MAAM,iBACxB,mBAAOA,MAAM,CAACW,mBAAd;AAAA,sBAEQX,MAAM,CAACG,MAAP,CAAc,QAAd;AAFR;AAAA;AAAA;AAAA;AAAA,kBADP;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAFR;AAAA;AAAA;AAAA;AAAA,cA5BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAiDD,CAnEM;;GAAMhB,Y;UAWPL,Q;;;KAXOK,Y","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport { COLUMNS, GROUPED_CoLUMNS } from './columns'\r\nimport './table.css'\r\n\r\nexport const SortingTable = () => {\r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const data = useMemo(() => MOCK_DATA, [])\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    footerGroups,\r\n    rows,\r\n    prepareRow\r\n  } = useTable({\r\n    columns,\r\n    data\r\n  }, \r\n  useSortBy)\r\n  \r\n\r\n  return (\r\n    <>\r\n      <table {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps(column.getSortByToggleProps())}>{column.render('Header')}\r\n                \r\n                <span>\r\n                    {column.isSorted ? (column.isSorttedDesc ? '⬇️' : '⬆️') : ''}\r\n                </span>\r\n                \r\n                </th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {rows.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n        <tfoot>\r\n            {\r\n                footerGroups.map(footerGroups => (\r\n                    <tr{...footerGroups.getFooterGroupProps()}>\r\n                        {footerGroups.headers.map(column => (\r\n                                <td{...column.getFooterGroupProps}>\r\n                                    {\r\n                                        column.render('Footer')\r\n                                    }\r\n                                </td>\r\n                            ))\r\n                        }\r\n                    </tr>\r\n                ))\r\n            }\r\n        </tfoot>\r\n      </table>\r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}