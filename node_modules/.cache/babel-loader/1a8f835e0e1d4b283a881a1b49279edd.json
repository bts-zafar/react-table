{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\data-table\\\\src\\\\components\\\\Pagination.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { useTable, useGlobalFilter, useFilters, usePagination } from 'react-table';\nimport MOCK_DATA from './MOCK_DATA.json';\nimport { COLUMNS } from './columns';\nimport './table.css'; // import { GlobalFilter } from './GlobalFilter'\n\nimport { ColumnFilter } from './ColumnFilter';\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Pagination = () => {\n  _s();\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => MOCK_DATA, []);\n  const defaultColumn = useMemo(() => {\n    return {\n      Filter: ColumnFilter\n    };\n  }, []);\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    pageOptions,\n    gotoPage,\n    pageCount,\n    setPageSize,\n    prepareRow,\n    state\n  } = useTable({\n    columns,\n    data,\n    defaultColumn\n  }, useFilters, useGlobalFilter, usePagination);\n  const {\n    pageIndex,\n    pageSize\n  } = state;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container m-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"select\", {\n              value: pageSize,\n              onChange: e => setPageSize(Number(e.target.value)),\n              children: [10, 25, 50, 100].map(pageSize => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: pageSize,\n                children: [\" Show \", pageSize, \" Rows \"]\n              }, pageSize, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 15\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 11\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 6\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-sm\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"goto\",\n              children: [\"Go to pages :  \", '', /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                defaultValue: pageIndex + 1,\n                onChange: e => {\n                  const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0;\n                  gotoPage(pageNumber);\n                },\n                style: {\n                  width: 75\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col table-data\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table\",\n              ...getTableProps(),\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n                  children: headerGroup.headers.map(column => /*#__PURE__*/_jsxDEV(\"th\", { ...column.getHeaderProps(),\n                    children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: column.canFilter ? column.render('Filter') : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 17\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 17\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 13\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n                children: page.map(row => {\n                  prepareRow(row);\n                  return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n                    children: row.cells.map(cell => {\n                      return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                        children: cell.render('Cell')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 110,\n                        columnNumber: 26\n                      }, this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 15\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"w-100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pagination\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => gotoPage(0),\n                disabled: !canPreviousPage,\n                children: '<<'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => previousPage(),\n                disabled: !canPreviousPage,\n                children: \"Previous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"page \", '', /*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: [pageIndex + 1, \" of \", pageOptions.length]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 9\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => nextPage(),\n                disabled: !canNextPage,\n                children: \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => gotoPage(pageCount - 1),\n                disabled: !canNextPage,\n                children: '>>'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 9\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n          data: data,\n          children: \"Download me\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pagination, \"Qwrpi4dBhee/jp+LjFb8FFB/2Js=\", false, function () {\n  return [useTable];\n});\n\n_c = Pagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/data-table/src/components/Pagination.js"],"names":["React","useMemo","useTable","useGlobalFilter","useFilters","usePagination","MOCK_DATA","COLUMNS","ColumnFilter","CSVLink","CSVDownload","Pagination","columns","data","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","pageOptions","gotoPage","pageCount","setPageSize","prepareRow","state","pageIndex","pageSize","e","Number","target","value","map","pageNumber","width","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","canFilter","row","getRowProps","cells","cell","getCellProps","length"],"mappings":"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","sourcesContent":["import React, { useMemo } from 'react'\r\nimport { useTable , useGlobalFilter, useFilters  , usePagination} from 'react-table'\r\nimport MOCK_DATA from './MOCK_DATA.json'\r\nimport { COLUMNS } from './columns'\r\nimport './table.css'\r\n// import { GlobalFilter } from './GlobalFilter'\r\nimport { ColumnFilter } from './ColumnFilter'\r\nimport { CSVLink, CSVDownload } from \"react-csv\";\r\n\r\n\r\nexport const Pagination = () => {\r\n  \r\n  const columns = useMemo(() => COLUMNS, [])\r\n  const data = useMemo(() => MOCK_DATA, [])\r\n\r\n  const defaultColumn = useMemo(() => {\r\n      return{\r\n      Filter: ColumnFilter\r\n    }\r\n  }, [])\r\n\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    nextPage,\r\n    previousPage,\r\n    canNextPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    gotoPage,\r\n    pageCount,\r\n    setPageSize,\r\n    prepareRow,\r\n    state,\r\n  } = useTable({\r\n    columns,\r\n    data,\r\n    defaultColumn\r\n  }, useFilters, useGlobalFilter , usePagination)\r\n\r\n  const {pageIndex, pageSize} = state\r\n\r\n  return (\r\n    <>\r\n   \r\n         \r\n    \r\n  \r\n\r\n   <div className=\"container mt-4\">\r\n      \r\n      \r\n   <div class=\"container m-4\">\r\n  <div class=\"row\">\r\n    <div class=\"col-sm\">\r\n       <select value={pageSize} onChange={e => setPageSize(Number(e.target.value))}>\r\n              {\r\n              [10, 25, 50, 100].map(pageSize => (\r\n              <option key={pageSize} value={pageSize}> Show {pageSize} Rows </option>\r\n              ))\r\n            }\r\n      </select>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n     <h3> <small className=\"text-muted\">\r\n</small> </h3>\r\n    </div>\r\n    <div class=\"col-sm\">\r\n      <span className=\"goto\">\r\n           Go to pages :  {''}\r\n            <input type='number' defaultValue={pageIndex +1} onChange={e => {\r\n               const pageNumber = e.target.value ? Number(e.target.value) - 1 : 0 \r\n               gotoPage(pageNumber)\r\n            }} style={{\r\n              width: 75,\r\n            }}/>\r\n          </span>\r\n    </div>\r\n  </div>\r\n</div>\r\n      \r\n     \r\n      \r\n      \r\n      \r\n      \r\n      <div class=\"container\">\r\n  <div class=\"row\">\r\n    <div class=\"col table-data\">\r\n    <table className=\"table\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}\r\n                <div>{column.canFilter ? column.render('Filter') : null}</div>\r\n                </th>\r\n              ))}\r\n            </tr> \r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map(row => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    \r\n    <div class=\"w-100\"></div>\r\n    \r\n\r\n    <div class=\"col\">\r\n    <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>{'<<'}</button>\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>Previous</button>\r\n        <span>\r\n        page {''}\r\n        <strong>\r\n          {pageIndex + 1} of {pageOptions.length}\r\n        </strong>\r\n      </span>\r\n      \r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>Next</button>\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>{'>>'}</button>\r\n      </div>\r\n      </div>\r\n    </div>\r\n    <CSVLink data={data}>Download me</CSVLink>\r\n  </div>\r\n</div>\r\n      \r\n      \r\n     \r\n    </>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}