{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zafar Abbas\\\\Desktop\\\\React\\\\data-table\\\\src\\\\components\\\\ImportTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport MaterialTable from 'material-table';\nimport XLSX from 'xlsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ImportTable = () => {\n  _s();\n\n  const [colDefs, setColDefs] = useState();\n  const [data, setData] = useState();\n\n  const importExcel = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n\n    reader.onload = event => {\n      //parse data\n      const bstr = event.target.result;\n      const workBook = XLSX.read(bstr, {\n        type: \"binary\"\n      }); //get first sheet\n\n      const workSheetName = workBook.SheetNames[0];\n      const workSheet = workBook.Sheets[workSheetName]; //convert to array\n\n      const fileData = XLSX.utils.sheet_to_json(workSheet, {\n        header: 1\n      });\n      console.log(fileData);\n      const header = fileData[0];\n      console.log(header);\n      fileData.splice(0, 1);\n      console.log(fileData);\n    };\n\n    reader.readAsBinaryString(file);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: importExcel\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Table\",\n      data: data,\n      columns: colDefs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 8\n  }, this);\n};\n\n_s(ImportTable, \"IrjxtztShS2uLtBxBuJnko+gh18=\");\n\n_c = ImportTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImportTable\");","map":{"version":3,"sources":["C:/Users/Zafar Abbas/Desktop/React/data-table/src/components/ImportTable.js"],"names":["React","useState","MaterialTable","XLSX","ImportTable","colDefs","setColDefs","data","setData","importExcel","e","file","target","files","reader","FileReader","onload","event","bstr","result","workBook","read","type","workSheetName","SheetNames","workSheet","Sheets","fileData","utils","sheet_to_json","header","console","log","splice","readAsBinaryString"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA+B,OAA/B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;;AAEA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,EAAtC;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,EAAhC;;AACA,QAAMQ,WAAW,GAAKC,CAAD,IAAO;AACxB,UAAMC,IAAI,GAAID,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAAd;AAEA,UAAMC,MAAM,GAAE,IAAIC,UAAJ,EAAd;;AACAD,IAAAA,MAAM,CAACE,MAAP,GAAeC,KAAD,IAAW;AAAC;AAC1B,YAAMC,IAAI,GAAGD,KAAK,CAACL,MAAN,CAAaO,MAA1B;AACA,YAAMC,QAAQ,GAAGjB,IAAI,CAACkB,IAAL,CAAUH,IAAV,EAAgB;AAAEI,QAAAA,IAAI,EAAE;AAAR,OAAhB,CAAjB,CAFyB,CAI3B;;AACA,YAAMC,aAAa,GAAGH,QAAQ,CAACI,UAAT,CAAoB,CAApB,CAAtB;AACA,YAAMC,SAAS,GAAGL,QAAQ,CAACM,MAAT,CAAgBH,aAAhB,CAAlB,CAN2B,CAO3B;;AACA,YAAMI,QAAQ,GAAGxB,IAAI,CAACyB,KAAL,CAAWC,aAAX,CAAyBJ,SAAzB,EAAoC;AAAEK,QAAAA,MAAM,EAAE;AAAV,OAApC,CAAjB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACA,YAAMG,MAAM,GAAGH,QAAQ,CAAC,CAAD,CAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AAEAH,MAAAA,QAAQ,CAACM,MAAT,CAAgB,CAAhB,EAAkB,CAAlB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACC,KAfD;;AAgBAb,IAAAA,MAAM,CAACoB,kBAAP,CAA0BvB,IAA1B;AACH,GArBD;;AAsBA,sBACG;AAAA,4BACK;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,QAAQ,EAAEF;AAA7B;AAAA;AAAA;AAAA;AAAA,YADL,eAEK,QAAC,aAAD;AACA,MAAA,KAAK,EAAE,OADP;AAEA,MAAA,IAAI,EAAEF,IAFN;AAGA,MAAA,OAAO,EAAEF;AAHT;AAAA;AAAA;AAAA;AAAA,YAFL;AAAA;AAAA;AAAA;AAAA;AAAA,UADH;AAUH,CAnCM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React,{ useState } from 'react'\r\nimport MaterialTable from 'material-table'\r\nimport XLSX from 'xlsx'\r\n\r\nexport const ImportTable = () => {\r\n    const [colDefs, setColDefs] = useState()\r\n    const [data, setData] = useState()\r\n    const importExcel  = (e) => {\r\n        const file = (e.target.files[0])\r\n\r\n        const reader =new FileReader()\r\n        reader.onload=(event) => {//parse data\r\n        const bstr = event.target.result\r\n        const workBook = XLSX.read(bstr, { type: \"binary\" })\r\n\r\n      //get first sheet\r\n      const workSheetName = workBook.SheetNames[0]\r\n      const workSheet = workBook.Sheets[workSheetName]\r\n      //convert to array\r\n      const fileData = XLSX.utils.sheet_to_json(workSheet, { header: 1 })\r\n        console.log(fileData)\r\n        const header = fileData[0]\r\n        console.log(header)\r\n        \r\n        fileData.splice(0,1)\r\n        console.log(fileData)\r\n        }\r\n        reader.readAsBinaryString(file)\r\n    }      \r\n    return (\r\n       <div>\r\n            <input type=\"file\" onChange={importExcel}/>\r\n            <MaterialTable \r\n            title={\"Table\"}\r\n            data={data}    \r\n            columns={colDefs}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}